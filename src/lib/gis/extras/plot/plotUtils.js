//>>built
define("plot/plotUtils",["./constants"],function(l){var g={distance:function(b,a){return Math.sqrt(Math.pow(b[0]-a[0],2)+Math.pow(b[1]-a[1],2))},wholeDistance:function(b){for(var a=0,c=0;c<b.length-1;c++)a+=g.distance(b[c],b[c+1]);return a},getBaseLength:function(b){return Math.pow(g.wholeDistance(b),0.99)},mid:function(b,a){return[(b[0]+a[0])/2,(b[1]+a[1])/2]},getCircleCenterOfThreePoints:function(b,a,c){var d=[(b[0]+a[0])/2,(b[1]+a[1])/2],e=[(b[0]+c[0])/2,(b[1]+c[1])/2];return g.getIntersectPoint(d,
[d[0]-b[1]+a[1],d[1]+b[0]-a[0]],e,[e[0]-b[1]+c[1],e[1]+b[0]-c[0]])},getIntersectPoint:function(b,a,c,d){if(b[1]==a[1])return d=(d[0]-c[0])/(d[1]-c[1]),a=d*(b[1]-c[1])+c[0],c=b[1],[a,c];if(c[1]==d[1])return a=(a[0]-b[0])/(a[1]-b[1]),a=a*(c[1]-b[1])+b[0],c=c[1],[a,c];a=(a[0]-b[0])/(a[1]-b[1]);d=(d[0]-c[0])/(d[1]-c[1]);c=(a*b[1]-b[0]-d*c[1]+c[0])/(a-d);a=a*c-a*b[1]+b[0];return[a,c]},getAzimuth:function(b,a){var c,d=Math.asin(Math.abs(a[1]-b[1])/g.distance(b,a));a[1]>=b[1]&&a[0]>=b[0]?c=d+Math.PI:a[1]>=
b[1]&&a[0]<b[0]?c=l.TWO_PI-d:a[1]<b[1]&&a[0]<b[0]?c=d:a[1]<b[1]&&a[0]>=b[0]&&(c=Math.PI-d);return c},getAngleOfThreePoints:function(b,a,c){b=g.getAzimuth(a,b)-g.getAzimuth(a,c);return 0>b?b+l.TWO_PI:b},isClockWise:function(b,a,c){return(c[1]-b[1])*(a[0]-b[0])>(a[1]-b[1])*(c[0]-b[0])},getPointOnLine:function(b,a,c){return[a[0]+b*(c[0]-a[0]),a[1]+b*(c[1]-a[1])]},getCubicValue:function(b,a,c,d,e){b=Math.max(Math.min(b,1),0);var f=1-b,h=b*b,g=h*b,l=f*f,n=l*f;return[n*a[0]+3*l*b*c[0]+3*f*h*d[0]+g*e[0],
n*a[1]+3*l*b*c[1]+3*f*h*d[1]+g*e[1]]},getThirdPoint:function(b,a,c,d,e){b=g.getAzimuth(b,a);e=e?b+c:b-c;c=d*Math.cos(e);d*=Math.sin(e);return[a[0]+c,a[1]+d]},getArcPoints:function(b,a,c,d){for(var e,f=[],h=d-c,h=0>h?h+l.TWO_PI:h,g=0;g<=l.FITTING_COUNT;g++)e=c+h*g/l.FITTING_COUNT,d=b[0]+a*Math.cos(e),e=b[1]+a*Math.sin(e),f.push([d,e]);return f},getBisectorNormals:function(b,a,c,d){var e=g.getNormal(a,c,d),f=Math.sqrt(e[0]*e[0]+e[1]*e[1]),h=e[0]/f,e=e[1]/f,k=g.distance(a,c),m=g.distance(c,d);f>l.ZERO_TOLERANCE?
g.isClockWise(a,c,d)?(d=b*k,f=c[0]-d*e,k=c[1]+d*h,a=[f,k],d=b*m,f=c[0]+d*e,k=c[1]-d*h):(d=b*k,f=c[0]+d*e,k=c[1]-d*h,a=[f,k],d=b*m,f=c[0]-d*e,k=c[1]+d*h):(f=c[0]+b*(a[0]-c[0]),k=c[1]+b*(a[1]-c[1]),a=[f,k],f=c[0]+b*(d[0]-c[0]),k=c[1]+b*(d[1]-c[1]));b=[f,k];return[a,b]},getNormal:function(b,a,c){var d=b[0]-a[0];b=b[1]-a[1];var e=Math.sqrt(d*d+b*b),d=d/e;b/=e;e=c[0]-a[0];a=c[1]-a[1];c=Math.sqrt(e*e+a*a);return[d+e/c,b+a/c]},getCurvePoints:function(b,a){for(var c=[g.getLeftMostControlPoint(a)],d=0;d<a.length-
2;d++)var e=a[d],f=a[d+1],e=g.getBisectorNormals(b,e,f,a[d+2]),c=c.concat(e);d=g.getRightMostControlPoint(a);c.push(d);for(var h=[],d=0;d<a.length-1;d++){e=a[d];f=a[d+1];h.push(e);for(b=0;b<l.FITTING_COUNT;b++){var k=g.getCubicValue(b/l.FITTING_COUNT,e,c[2*d],c[2*d+1],f);h.push(k)}h.push(f)}return h},getLeftMostControlPoint:function(b){var a=b[0],c=b[1],d=b[2];b=g.getBisectorNormals(0,a,c,d)[0];d=g.getNormal(a,c,d);if(Math.sqrt(d[0]*d[0]+d[1]*d[1])>l.ZERO_TOLERANCE){var d=g.mid(a,c),e=a[0]-d[0],f=
a[1]-d[1],c=2/g.distance(a,c),a=-c*f,c=c*e,e=2*a*c,f=b[0]-d[0],h=b[1]-d[1];b=d[0]+(a*a-c*c)*f+e*h;d=d[1]+e*f+(c*c-a*a)*h}else b=a[0]+t*(c[0]-a[0]),d=a[1]+t*(c[1]-a[1]);return[b,d]},getRightMostControlPoint:function(b){var a=b.length,c=b[a-3],d=b[a-2],a=b[a-1];b=g.getBisectorNormals(0,c,d,a)[1];c=g.getNormal(c,d,a);if(Math.sqrt(c[0]*c[0]+c[1]*c[1])>l.ZERO_TOLERANCE){var c=g.mid(d,a),e=a[0]-c[0],f=a[1]-c[1],a=2/g.distance(d,a),d=-a*f,a=a*e,e=2*d*a,f=b[0]-c[0],h=b[1]-c[1];b=c[0]+(d*d-a*a)*f+e*h;c=c[1]+
e*f+(a*a-d*d)*h}else b=a[0]+t*(d[0]-a[0]),c=a[1]+t*(d[1]-a[1]);return[b,c]},getBezierPoints:function(b){if(2>=b.length)return b;for(var a=[],c=b.length-1,d=0;1>=d;d+=0.01){for(var e=y=0,f=0;f<=c;f++){var h=g.getBinomialFactor(c,f),k=Math.pow(d,f),l=Math.pow(1-d,c-f),e=e+h*k*l*b[f][0];y+=h*k*l*b[f][1]}a.push([e,y])}a.push(b[c]);return a},getBinomialFactor:function(b,a){return g.getFactorial(b)/(g.getFactorial(a)*g.getFactorial(b-a))},getFactorial:function(b){if(1>=b)return 1;if(2==b)return 2;if(3==
b)return 6;if(4==b)return 24;if(5==b)return 120;for(var a=1,c=1;c<=b;c++)a*=c;return a},getQBSplinePoints:function(b){if(2>=b.length)return b;var a=[],c=b.length-2-1;a.push(b[0]);for(var d=0;d<=c;d++)for(var e=0;1>=e;e+=0.05){for(var f=y=0,h=0;2>=h;h++){var k=g.getQuadricBSplineFactor(h,e),f=f+k*b[d+h][0];y+=k*b[d+h][1]}a.push([f,y])}a.push(b[b.length-1]);return a},getQuadricBSplineFactor:function(b,a){return 0==b?Math.pow(a-1,2)/2:1==b?(-2*Math.pow(a,2)+2*a+1)/2:2==b?Math.pow(a,2)/2:0}};return g});
//# sourceMappingURL=plotUtils.js.map